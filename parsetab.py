
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSEPAR COMMA DIM DIVIDE DO ELSE END EQUALS FLOAT FLOAT_TYPE FOR GOSUB GOTO GREATERTHAN IDENTIFIER IF INPUT INT INT_TYPE ISEQUALTO LABEL LABEL_SALTO LESSTHAN LET LOOP MINUS MULTIPLY NEXT OPENPAR OR PLUS PRINT PROGRAM RETURN SIZE SIZE_ID STRING STRING_TYPE THEN TO WHILE\n    programa : PROGRAM var procedure block END\n    \n    var : DIM repeated_identifier AS type repeated_size var\n        | DIM repeated_identifier AS STRING_TYPE var\n        | empty\n    \n    repeated_size : SIZE repeated_size\n                    | SIZE_ID repeated_size\n                    | empty\n    \n    repeated_identifier : IDENTIFIER COMMA repeated_identifier\n                        | IDENTIFIER\n    \n    type : INT_TYPE\n            | FLOAT_TYPE\n    \n    block : statement block\n            | empty\n    \n    statement : INPUT repeated_print\n        | PRINT repeated_print\n        | GOSUB LABEL\n        | GOTO LABEL\n        | LABEL_SALTO\n    \n    statement : FOR aux1 TO aux2 block NEXT aux3\n    \n    aux1 : IDENTIFIER EQUALS expression\n    \n    aux2 : expression\n    \n    aux3 : IDENTIFIER\n    \n    statement : DO do_while_inicio block LOOP WHILE aux_do_while\n    \n    do_while_inicio : empty\n    \n    aux_do_while : expression\n    \n    statement : WHILE aux_while DO block LOOP fin_while\n    \n    aux_while : expression\n    \n    fin_while : empty\n    \n    statement : IF aux_if THEN block ELSE aux_else block END IF aux_fin\n    \n    aux_if : expression\n    \n    aux_else : empty\n    \n    aux_fin : empty\n    \n    statement : LET IDENTIFIER repeated_size EQUALS expression\n    \n    procedure : LABEL block RETURN procedure\n                | empty\n    \n    repeated_print : repeated_elem COMMA repeated_print\n                    | repeated_elem\n    \n    repeated_elem : STRING\n                    | elem\n    \n    expression : expression_s op_rel expression_s\n                | expression_s\n    \n    expression_s : term \n                | term PLUS expression_s\n                | term MINUS expression_s\n                | term OR expression_s\n    \n    term : factor\n        | factor MULTIPLY term\n        | factor DIVIDE term\n        | factor AND term\n    \n    factor : elem\n            | OPENPAR expression CLOSEPAR\n    \n    elem : INT\n        | IDENTIFIER repeated_size\n        | elem_else\n    \n    elem_else : FLOAT\n    \n    op_rel : LESSTHAN\n            | GREATERTHAN\n            | ISEQUALTO\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,27,],[0,-1,]),'DIM':([2,55,56,57,58,62,63,64,83,86,87,],[4,-59,4,-10,-11,-59,-59,-7,4,-5,-6,]),'LABEL':([2,3,5,16,17,54,55,56,57,58,62,63,64,83,84,86,87,103,],[-59,7,-4,38,39,7,-59,-59,-10,-11,-59,-59,-7,-59,-3,-5,-6,-2,]),'INPUT':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,14,14,-35,14,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,14,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,14,14,-34,-59,-3,-36,-5,-6,14,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,14,-31,-19,-22,-59,-29,-32,]),'PRINT':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,15,15,-35,15,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,15,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,15,15,-34,-59,-3,-36,-5,-6,15,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,15,-31,-19,-22,-59,-29,-32,]),'GOSUB':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,16,16,-35,16,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,16,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,16,16,-34,-59,-3,-36,-5,-6,16,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,16,-31,-19,-22,-59,-29,-32,]),'GOTO':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,17,17,-35,17,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,17,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,17,17,-34,-59,-3,-36,-5,-6,17,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,17,-31,-19,-22,-59,-29,-32,]),'LABEL_SALTO':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,18,18,-35,18,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,18,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,18,18,-34,-59,-3,-36,-5,-6,18,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,18,-31,-19,-22,-59,-29,-32,]),'FOR':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,19,19,-35,19,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,19,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,19,19,-34,-59,-3,-36,-5,-6,19,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,19,-31,-19,-22,-59,-29,-32,]),'DO':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,20,20,-35,20,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,20,-24,68,-27,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,20,20,-34,-59,-3,-36,-5,-6,20,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,20,-31,-19,-22,-59,-29,-32,]),'WHILE':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,21,21,-35,21,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,21,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,21,21,-34,-59,-3,-36,-5,-6,21,-21,105,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,21,-31,-19,-22,-59,-29,-32,]),'IF':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,119,120,121,122,],[-59,-59,-4,22,22,-35,22,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,22,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,22,22,-34,-59,-3,-36,-5,-6,22,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,22,-31,-19,-22,120,-59,-29,-32,]),'LET':([2,3,5,6,7,8,12,18,20,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,54,55,56,57,58,61,62,63,64,68,80,82,83,84,85,86,87,88,89,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,120,121,122,],[-59,-59,-4,23,23,-35,23,-18,-59,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,23,-24,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,23,23,-34,-59,-3,-36,-5,-6,23,-21,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,23,-31,-19,-22,-59,-29,-32,]),'END':([2,3,5,6,8,11,12,13,18,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,54,55,56,57,58,61,62,63,64,82,83,84,85,86,87,93,94,95,96,97,98,99,100,103,106,107,108,110,111,112,113,114,115,116,117,118,120,121,122,],[-59,-59,-4,-59,-35,27,-59,-13,-18,-12,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,-41,-42,-46,-50,-59,-59,-59,-10,-11,-53,-59,-59,-7,-34,-59,-3,-36,-5,-6,-40,-43,-44,-45,-47,-48,-49,-51,-2,-59,-59,-33,-23,-25,-26,-28,-59,-31,-19,-22,119,-59,-29,-32,]),'IDENTIFIER':([4,14,15,19,21,22,23,26,50,60,65,66,69,70,71,72,73,74,75,76,77,78,102,105,109,],[10,34,34,41,34,34,53,10,34,34,34,34,34,-56,-57,-58,34,34,34,34,34,34,34,34,117,]),'RETURN':([7,12,13,18,24,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,61,62,63,64,85,86,87,93,94,95,96,97,98,99,100,106,108,110,111,112,113,116,117,120,121,122,],[-59,-59,-13,-18,54,-12,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,-41,-42,-46,-50,-53,-59,-59,-7,-36,-5,-6,-40,-43,-44,-45,-47,-48,-49,-51,-59,-33,-23,-25,-26,-28,-19,-22,-59,-29,-32,]),'AS':([9,10,59,],[25,-9,-8,]),'COMMA':([10,30,31,32,33,34,35,36,61,62,63,64,86,87,],[26,60,-38,-39,-52,-59,-54,-55,-53,-59,-59,-7,-5,-6,]),'LOOP':([12,13,18,20,28,29,30,31,32,33,34,35,36,37,38,39,42,43,46,47,48,49,61,62,63,64,67,68,85,86,87,92,93,94,95,96,97,98,99,100,106,108,110,111,112,113,116,117,120,121,122,],[-59,-13,-18,-59,-12,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,-59,-24,-41,-42,-46,-50,-53,-59,-59,-7,91,-59,-36,-5,-6,106,-40,-43,-44,-45,-47,-48,-49,-51,-59,-33,-23,-25,-26,-28,-19,-22,-59,-29,-32,]),'ELSE':([12,13,18,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,61,62,63,64,80,85,86,87,93,94,95,96,97,98,99,100,101,106,108,110,111,112,113,116,117,120,121,122,],[-59,-13,-18,-12,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,-41,-42,-46,-50,-53,-59,-59,-7,-59,-36,-5,-6,-40,-43,-44,-45,-47,-48,-49,-51,107,-59,-33,-23,-25,-26,-28,-19,-22,-59,-29,-32,]),'NEXT':([12,13,18,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,61,62,63,64,85,86,87,88,89,93,94,95,96,97,98,99,100,104,106,108,110,111,112,113,116,117,120,121,122,],[-59,-13,-18,-12,-14,-37,-38,-39,-52,-59,-54,-55,-15,-16,-17,-41,-42,-46,-50,-53,-59,-59,-7,-36,-5,-6,-59,-21,-40,-43,-44,-45,-47,-48,-49,-51,109,-59,-33,-23,-25,-26,-28,-19,-22,-59,-29,-32,]),'STRING':([14,15,60,],[31,31,31,]),'INT':([14,15,21,22,50,60,65,66,69,70,71,72,73,74,75,76,77,78,102,105,],[33,33,33,33,33,33,33,33,33,-56,-57,-58,33,33,33,33,33,33,33,33,]),'FLOAT':([14,15,21,22,50,60,65,66,69,70,71,72,73,74,75,76,77,78,102,105,],[36,36,36,36,36,36,36,36,36,-56,-57,-58,36,36,36,36,36,36,36,36,]),'OPENPAR':([21,22,50,65,66,69,70,71,72,73,74,75,76,77,78,102,105,],[50,50,50,50,50,50,-56,-57,-58,50,50,50,50,50,50,50,50,]),'STRING_TYPE':([25,],[56,]),'INT_TYPE':([25,],[57,]),'FLOAT_TYPE':([25,],[58,]),'MULTIPLY':([33,34,35,36,48,49,61,62,63,64,86,87,100,],[-52,-59,-54,-55,76,-50,-53,-59,-59,-7,-5,-6,-51,]),'DIVIDE':([33,34,35,36,48,49,61,62,63,64,86,87,100,],[-52,-59,-54,-55,77,-50,-53,-59,-59,-7,-5,-6,-51,]),'AND':([33,34,35,36,48,49,61,62,63,64,86,87,100,],[-52,-59,-54,-55,78,-50,-53,-59,-59,-7,-5,-6,-51,]),'PLUS':([33,34,35,36,47,48,49,61,62,63,64,86,87,97,98,99,100,],[-52,-59,-54,-55,73,-46,-50,-53,-59,-59,-7,-5,-6,-47,-48,-49,-51,]),'MINUS':([33,34,35,36,47,48,49,61,62,63,64,86,87,97,98,99,100,],[-52,-59,-54,-55,74,-46,-50,-53,-59,-59,-7,-5,-6,-47,-48,-49,-51,]),'OR':([33,34,35,36,47,48,49,61,62,63,64,86,87,97,98,99,100,],[-52,-59,-54,-55,75,-46,-50,-53,-59,-59,-7,-5,-6,-47,-48,-49,-51,]),'LESSTHAN':([33,34,35,36,46,47,48,49,61,62,63,64,86,87,94,95,96,97,98,99,100,],[-52,-59,-54,-55,70,-42,-46,-50,-53,-59,-59,-7,-5,-6,-43,-44,-45,-47,-48,-49,-51,]),'GREATERTHAN':([33,34,35,36,46,47,48,49,61,62,63,64,86,87,94,95,96,97,98,99,100,],[-52,-59,-54,-55,71,-42,-46,-50,-53,-59,-59,-7,-5,-6,-43,-44,-45,-47,-48,-49,-51,]),'ISEQUALTO':([33,34,35,36,46,47,48,49,61,62,63,64,86,87,94,95,96,97,98,99,100,],[-52,-59,-54,-55,72,-42,-46,-50,-53,-59,-59,-7,-5,-6,-43,-44,-45,-47,-48,-49,-51,]),'THEN':([33,34,35,36,46,47,48,49,51,52,61,62,63,64,86,87,93,94,95,96,97,98,99,100,],[-52,-59,-54,-55,-41,-42,-46,-50,80,-30,-53,-59,-59,-7,-5,-6,-40,-43,-44,-45,-47,-48,-49,-51,]),'CLOSEPAR':([33,34,35,36,46,47,48,49,61,62,63,64,79,86,87,93,94,95,96,97,98,99,100,],[-52,-59,-54,-55,-41,-42,-46,-50,-53,-59,-59,-7,100,-5,-6,-40,-43,-44,-45,-47,-48,-49,-51,]),'TO':([33,34,35,36,40,46,47,48,49,61,62,63,64,86,87,90,93,94,95,96,97,98,99,100,],[-52,-59,-54,-55,65,-41,-42,-46,-50,-53,-59,-59,-7,-5,-6,-20,-40,-43,-44,-45,-47,-48,-49,-51,]),'SIZE':([34,53,55,57,58,62,63,],[62,62,62,-10,-11,62,62,]),'SIZE_ID':([34,53,55,57,58,62,63,],[63,63,63,-10,-11,63,63,]),'EQUALS':([41,53,62,63,64,81,86,87,],[66,-59,-59,-59,-7,102,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'var':([2,56,83,],[3,84,103,]),'empty':([2,3,6,7,12,20,34,42,53,54,55,56,62,63,68,80,83,88,106,107,114,120,],[5,8,13,13,13,43,64,13,64,8,64,5,64,64,13,13,5,13,113,115,13,122,]),'procedure':([3,54,],[6,82,]),'repeated_identifier':([4,26,],[9,59,]),'block':([6,7,12,42,68,80,88,114,],[11,24,28,67,92,101,104,118,]),'statement':([6,7,12,42,68,80,88,114,],[12,12,12,12,12,12,12,12,]),'repeated_print':([14,15,60,],[29,37,85,]),'repeated_elem':([14,15,60,],[30,30,30,]),'elem':([14,15,21,22,50,60,65,66,69,73,74,75,76,77,78,102,105,],[32,32,49,49,49,32,49,49,49,49,49,49,49,49,49,49,49,]),'elem_else':([14,15,21,22,50,60,65,66,69,73,74,75,76,77,78,102,105,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'aux1':([19,],[40,]),'do_while_inicio':([20,],[42,]),'aux_while':([21,],[44,]),'expression':([21,22,50,65,66,102,105,],[45,52,79,89,90,108,111,]),'expression_s':([21,22,50,65,66,69,73,74,75,102,105,],[46,46,46,46,46,93,94,95,96,46,46,]),'term':([21,22,50,65,66,69,73,74,75,76,77,78,102,105,],[47,47,47,47,47,47,47,47,47,97,98,99,47,47,]),'factor':([21,22,50,65,66,69,73,74,75,76,77,78,102,105,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'aux_if':([22,],[51,]),'type':([25,],[55,]),'repeated_size':([34,53,55,62,63,],[61,81,83,86,87,]),'op_rel':([46,],[69,]),'aux2':([65,],[88,]),'aux_do_while':([105,],[110,]),'fin_while':([106,],[112,]),'aux_else':([107,],[114,]),'aux3':([109,],[116,]),'aux_fin':([120,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM var procedure block END','programa',5,'p_programa','parserules.py',40),
  ('var -> DIM repeated_identifier AS type repeated_size var','var',6,'p_var','parserules.py',46),
  ('var -> DIM repeated_identifier AS STRING_TYPE var','var',5,'p_var','parserules.py',47),
  ('var -> empty','var',1,'p_var','parserules.py',48),
  ('repeated_size -> SIZE repeated_size','repeated_size',2,'p_repeated_size','parserules.py',57),
  ('repeated_size -> SIZE_ID repeated_size','repeated_size',2,'p_repeated_size','parserules.py',58),
  ('repeated_size -> empty','repeated_size',1,'p_repeated_size','parserules.py',59),
  ('repeated_identifier -> IDENTIFIER COMMA repeated_identifier','repeated_identifier',3,'p_repeated_identifier','parserules.py',65),
  ('repeated_identifier -> IDENTIFIER','repeated_identifier',1,'p_repeated_identifier','parserules.py',66),
  ('type -> INT_TYPE','type',1,'p_var_type','parserules.py',82),
  ('type -> FLOAT_TYPE','type',1,'p_var_type','parserules.py',83),
  ('block -> statement block','block',2,'p_block','parserules.py',89),
  ('block -> empty','block',1,'p_block','parserules.py',90),
  ('statement -> INPUT repeated_print','statement',2,'p_statement','parserules.py',96),
  ('statement -> PRINT repeated_print','statement',2,'p_statement','parserules.py',97),
  ('statement -> GOSUB LABEL','statement',2,'p_statement','parserules.py',98),
  ('statement -> GOTO LABEL','statement',2,'p_statement','parserules.py',99),
  ('statement -> LABEL_SALTO','statement',1,'p_statement','parserules.py',100),
  ('statement -> FOR aux1 TO aux2 block NEXT aux3','statement',7,'p_statement_for','parserules.py',108),
  ('aux1 -> IDENTIFIER EQUALS expression','aux1',3,'p_for_aux1','parserules.py',114),
  ('aux2 -> expression','aux2',1,'p_for_aux2','parserules.py',128),
  ('aux3 -> IDENTIFIER','aux3',1,'p_for_aux3','parserules.py',150),
  ('statement -> DO do_while_inicio block LOOP WHILE aux_do_while','statement',6,'p_statement_do_while','parserules.py',169),
  ('do_while_inicio -> empty','do_while_inicio',1,'p_do_while_inicio','parserules.py',175),
  ('aux_do_while -> expression','aux_do_while',1,'p_aux_do_while','parserules.py',185),
  ('statement -> WHILE aux_while DO block LOOP fin_while','statement',6,'p_statement_while','parserules.py',201),
  ('aux_while -> expression','aux_while',1,'p_aux_while','parserules.py',207),
  ('fin_while -> empty','fin_while',1,'p_aux_fin_while','parserules.py',222),
  ('statement -> IF aux_if THEN block ELSE aux_else block END IF aux_fin','statement',10,'p_statement_if','parserules.py',240),
  ('aux_if -> expression','aux_if',1,'p_aux_if','parserules.py',246),
  ('aux_else -> empty','aux_else',1,'p_aux_else','parserules.py',257),
  ('aux_fin -> empty','aux_fin',1,'p_aux_if_fin','parserules.py',273),
  ('statement -> LET IDENTIFIER repeated_size EQUALS expression','statement',5,'p_statement_assignment','parserules.py',281),
  ('procedure -> LABEL block RETURN procedure','procedure',4,'p_procedure','parserules.py',292),
  ('procedure -> empty','procedure',1,'p_procedure','parserules.py',293),
  ('repeated_print -> repeated_elem COMMA repeated_print','repeated_print',3,'p_repeated_print','parserules.py',299),
  ('repeated_print -> repeated_elem','repeated_print',1,'p_repeated_print','parserules.py',300),
  ('repeated_elem -> STRING','repeated_elem',1,'p_repeated_elem','parserules.py',306),
  ('repeated_elem -> elem','repeated_elem',1,'p_repeated_elem','parserules.py',307),
  ('expression -> expression_s op_rel expression_s','expression',3,'p_expression','parserules.py',315),
  ('expression -> expression_s','expression',1,'p_expression','parserules.py',316),
  ('expression_s -> term','expression_s',1,'p_expression_s','parserules.py',325),
  ('expression_s -> term PLUS expression_s','expression_s',3,'p_expression_s','parserules.py',326),
  ('expression_s -> term MINUS expression_s','expression_s',3,'p_expression_s','parserules.py',327),
  ('expression_s -> term OR expression_s','expression_s',3,'p_expression_s','parserules.py',328),
  ('term -> factor','term',1,'p_term','parserules.py',337),
  ('term -> factor MULTIPLY term','term',3,'p_term','parserules.py',338),
  ('term -> factor DIVIDE term','term',3,'p_term','parserules.py',339),
  ('term -> factor AND term','term',3,'p_term','parserules.py',340),
  ('factor -> elem','factor',1,'p_factor','parserules.py',349),
  ('factor -> OPENPAR expression CLOSEPAR','factor',3,'p_factor','parserules.py',350),
  ('elem -> INT','elem',1,'p_elem_float','parserules.py',359),
  ('elem -> IDENTIFIER repeated_size','elem',2,'p_elem_float','parserules.py',360),
  ('elem -> elem_else','elem',1,'p_elem_float','parserules.py',361),
  ('elem_else -> FLOAT','elem_else',1,'p_elem','parserules.py',370),
  ('op_rel -> LESSTHAN','op_rel',1,'p_op_rel','parserules.py',376),
  ('op_rel -> GREATERTHAN','op_rel',1,'p_op_rel','parserules.py',377),
  ('op_rel -> ISEQUALTO','op_rel',1,'p_op_rel','parserules.py',378),
  ('empty -> <empty>','empty',0,'p_empty','parserules.py',388),
]
