
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSEPAR COMMA DIM DIVIDE DO ELSE END EQUALS FLOAT FLOAT_TYPE FOR GOSUB GOTO GREATERTHAN IDENTIFIER IF INPUT INT INT_TYPE ISEQUALTO LABEL LABEL_SALTO LESSTHAN LET LOOP MINUS MULTIPLY NEXT OPENPAR OR PLUS PRINT PROGRAM RETURN SIZE SIZE_ID STRING STRING_TYPE THEN TO WHILE\n    programa : PROGRAM var procedure block END\n    \n    var : DIM repeated_identifier AS type repeated_size var\n        | DIM repeated_identifier AS STRING_TYPE var\n        | empty\n    \n    repeated_size : SIZE repeated_size\n                    | SIZE_ID repeated_size\n                    | empty\n    \n    repeated_identifier : IDENTIFIER COMMA repeated_identifier\n                        | IDENTIFIER\n    \n    type : INT_TYPE\n            | FLOAT_TYPE\n    \n    block : statement block\n            | empty\n    \n    statement : INPUT repeated_print\n        | PRINT repeated_print\n        | FOR IDENTIFIER EQUALS INT TO INT block NEXT IDENTIFIER\n        | GOSUB LABEL\n        | GOTO LABEL\n        | LABEL_SALTO\n    \n    statement : DO do_while_inicio block LOOP WHILE aux_do_while\n    \n    do_while_inicio : empty\n    \n    aux_do_while : expression\n    \n    statement : WHILE aux_while DO block LOOP fin_while\n    \n    aux_while : expression\n    \n    fin_while : empty\n    \n    statement : IF aux_if THEN block ELSE aux_else block END IF aux_fin\n    \n    aux_if : expression\n    \n    aux_else : empty\n    \n    aux_fin : empty\n    \n    statement : LET IDENTIFIER repeated_size EQUALS expression\n    \n    procedure : LABEL block RETURN procedure\n                | empty\n    \n    repeated_print : repeated_elem COMMA repeated_print\n                    | repeated_elem\n    \n    repeated_elem : STRING\n                    | elem\n    \n    expression : expression_s op_rel expression_s\n                | expression_s\n    \n    expression_s : term \n                | term PLUS expression_s\n                | term MINUS expression_s\n                | term OR expression_s\n    \n    term : factor\n        | factor MULTIPLY term\n        | factor DIVIDE term\n        | factor AND term\n    \n    factor : elem\n            | OPENPAR expression CLOSEPAR\n    \n    elem : INT\n        | IDENTIFIER repeated_size\n        | elem_else\n    \n    elem_else : FLOAT\n    \n    op_rel : LESSTHAN\n            | GREATERTHAN\n            | ISEQUALTO\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,27,],[0,-1,]),'DIM':([2,54,55,56,57,61,62,63,81,84,85,],[4,-56,4,-10,-11,-56,-56,-7,4,-5,-6,]),'LABEL':([2,3,5,17,18,53,54,55,56,57,61,62,63,81,82,84,85,99,],[-56,7,-4,39,40,7,-56,-56,-10,-11,-56,-56,-7,-56,-3,-5,-6,-2,]),'INPUT':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,14,14,-32,14,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,14,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,14,14,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,14,-20,-22,-23,-25,14,-28,-16,-56,-26,-29,]),'PRINT':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,15,15,-32,15,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,15,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,15,15,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,15,-20,-22,-23,-25,15,-28,-16,-56,-26,-29,]),'FOR':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,16,16,-32,16,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,16,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,16,16,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,16,-20,-22,-23,-25,16,-28,-16,-56,-26,-29,]),'GOSUB':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,17,17,-32,17,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,17,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,17,17,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,17,-20,-22,-23,-25,17,-28,-16,-56,-26,-29,]),'GOTO':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,18,18,-32,18,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,18,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,18,18,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,18,-20,-22,-23,-25,18,-28,-16,-56,-26,-29,]),'LABEL_SALTO':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,19,19,-32,19,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,19,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,19,19,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,19,-20,-22,-23,-25,19,-28,-16,-56,-26,-29,]),'DO':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,20,20,-32,20,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,20,-21,66,-24,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,20,20,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,20,-20,-22,-23,-25,20,-28,-16,-56,-26,-29,]),'WHILE':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,87,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,21,21,-32,21,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,21,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,21,21,-31,-56,-3,-33,-5,-6,101,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,21,-20,-22,-23,-25,21,-28,-16,-56,-26,-29,]),'IF':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,115,116,117,118,119,],[-56,-56,-4,22,22,-32,22,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,22,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,22,22,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,22,-20,-22,-23,-25,22,-28,117,-16,-56,-26,-29,]),'LET':([2,3,5,6,7,8,12,19,20,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,53,54,55,56,57,60,61,62,63,66,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,105,106,107,108,109,110,111,116,117,118,119,],[-56,-56,-4,23,23,-32,23,-19,-56,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,23,-21,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,23,23,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,23,-20,-22,-23,-25,23,-28,-16,-56,-26,-29,]),'END':([2,3,5,6,8,11,12,13,19,28,29,30,31,32,33,34,35,36,37,39,40,45,46,47,48,53,54,55,56,57,60,61,62,63,80,81,82,83,84,85,89,90,91,92,93,94,95,96,99,102,103,104,106,107,108,109,110,111,113,116,117,118,119,],[-56,-56,-4,-56,-32,27,-56,-13,-19,-12,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,-38,-39,-43,-47,-56,-56,-56,-10,-11,-50,-56,-56,-7,-31,-56,-3,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-2,-56,-56,-30,-20,-22,-23,-25,-56,-28,115,-16,-56,-26,-29,]),'IDENTIFIER':([4,14,15,16,21,22,23,26,49,59,67,68,69,70,71,72,73,74,75,76,98,101,114,],[10,34,34,38,34,34,52,10,34,34,34,-53,-54,-55,34,34,34,34,34,34,34,34,116,]),'RETURN':([7,12,13,19,24,28,29,30,31,32,33,34,35,36,37,39,40,45,46,47,48,60,61,62,63,83,84,85,89,90,91,92,93,94,95,96,102,104,106,107,108,109,116,117,118,119,],[-56,-56,-13,-19,53,-12,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,-38,-39,-43,-47,-50,-56,-56,-7,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-56,-30,-20,-22,-23,-25,-16,-56,-26,-29,]),'AS':([9,10,58,],[25,-9,-8,]),'COMMA':([10,30,31,32,33,34,35,36,60,61,62,63,84,85,],[26,59,-35,-36,-49,-56,-51,-52,-50,-56,-56,-7,-5,-6,]),'LOOP':([12,13,19,20,28,29,30,31,32,33,34,35,36,37,39,40,41,42,45,46,47,48,60,61,62,63,65,66,83,84,85,88,89,90,91,92,93,94,95,96,102,104,106,107,108,109,116,117,118,119,],[-56,-13,-19,-56,-12,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,-56,-21,-38,-39,-43,-47,-50,-56,-56,-7,87,-56,-33,-5,-6,102,-37,-40,-41,-42,-44,-45,-46,-48,-56,-30,-20,-22,-23,-25,-16,-56,-26,-29,]),'ELSE':([12,13,19,28,29,30,31,32,33,34,35,36,37,39,40,45,46,47,48,60,61,62,63,78,83,84,85,89,90,91,92,93,94,95,96,97,102,104,106,107,108,109,116,117,118,119,],[-56,-13,-19,-12,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,-38,-39,-43,-47,-50,-56,-56,-7,-56,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,103,-56,-30,-20,-22,-23,-25,-16,-56,-26,-29,]),'NEXT':([12,13,19,28,29,30,31,32,33,34,35,36,37,39,40,45,46,47,48,60,61,62,63,83,84,85,89,90,91,92,93,94,95,96,102,104,105,106,107,108,109,112,116,117,118,119,],[-56,-13,-19,-12,-14,-34,-35,-36,-49,-56,-51,-52,-15,-17,-18,-38,-39,-43,-47,-50,-56,-56,-7,-33,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,-56,-30,-56,-20,-22,-23,-25,114,-16,-56,-26,-29,]),'STRING':([14,15,59,],[31,31,31,]),'INT':([14,15,21,22,49,59,64,67,68,69,70,71,72,73,74,75,76,98,100,101,],[33,33,33,33,33,33,86,33,-53,-54,-55,33,33,33,33,33,33,33,105,33,]),'FLOAT':([14,15,21,22,49,59,67,68,69,70,71,72,73,74,75,76,98,101,],[36,36,36,36,36,36,36,-53,-54,-55,36,36,36,36,36,36,36,36,]),'OPENPAR':([21,22,49,67,68,69,70,71,72,73,74,75,76,98,101,],[49,49,49,49,-53,-54,-55,49,49,49,49,49,49,49,49,]),'STRING_TYPE':([25,],[55,]),'INT_TYPE':([25,],[56,]),'FLOAT_TYPE':([25,],[57,]),'MULTIPLY':([33,34,35,36,47,48,60,61,62,63,84,85,96,],[-49,-56,-51,-52,74,-47,-50,-56,-56,-7,-5,-6,-48,]),'DIVIDE':([33,34,35,36,47,48,60,61,62,63,84,85,96,],[-49,-56,-51,-52,75,-47,-50,-56,-56,-7,-5,-6,-48,]),'AND':([33,34,35,36,47,48,60,61,62,63,84,85,96,],[-49,-56,-51,-52,76,-47,-50,-56,-56,-7,-5,-6,-48,]),'PLUS':([33,34,35,36,46,47,48,60,61,62,63,84,85,93,94,95,96,],[-49,-56,-51,-52,71,-43,-47,-50,-56,-56,-7,-5,-6,-44,-45,-46,-48,]),'MINUS':([33,34,35,36,46,47,48,60,61,62,63,84,85,93,94,95,96,],[-49,-56,-51,-52,72,-43,-47,-50,-56,-56,-7,-5,-6,-44,-45,-46,-48,]),'OR':([33,34,35,36,46,47,48,60,61,62,63,84,85,93,94,95,96,],[-49,-56,-51,-52,73,-43,-47,-50,-56,-56,-7,-5,-6,-44,-45,-46,-48,]),'LESSTHAN':([33,34,35,36,45,46,47,48,60,61,62,63,84,85,90,91,92,93,94,95,96,],[-49,-56,-51,-52,68,-39,-43,-47,-50,-56,-56,-7,-5,-6,-40,-41,-42,-44,-45,-46,-48,]),'GREATERTHAN':([33,34,35,36,45,46,47,48,60,61,62,63,84,85,90,91,92,93,94,95,96,],[-49,-56,-51,-52,69,-39,-43,-47,-50,-56,-56,-7,-5,-6,-40,-41,-42,-44,-45,-46,-48,]),'ISEQUALTO':([33,34,35,36,45,46,47,48,60,61,62,63,84,85,90,91,92,93,94,95,96,],[-49,-56,-51,-52,70,-39,-43,-47,-50,-56,-56,-7,-5,-6,-40,-41,-42,-44,-45,-46,-48,]),'THEN':([33,34,35,36,45,46,47,48,50,51,60,61,62,63,84,85,89,90,91,92,93,94,95,96,],[-49,-56,-51,-52,-38,-39,-43,-47,78,-27,-50,-56,-56,-7,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,]),'CLOSEPAR':([33,34,35,36,45,46,47,48,60,61,62,63,77,84,85,89,90,91,92,93,94,95,96,],[-49,-56,-51,-52,-38,-39,-43,-47,-50,-56,-56,-7,96,-5,-6,-37,-40,-41,-42,-44,-45,-46,-48,]),'SIZE':([34,52,54,56,57,61,62,],[61,61,61,-10,-11,61,61,]),'SIZE_ID':([34,52,54,56,57,61,62,],[62,62,62,-10,-11,62,62,]),'EQUALS':([38,52,61,62,63,79,84,85,],[64,-56,-56,-56,-7,98,-5,-6,]),'TO':([86,],[100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'var':([2,55,81,],[3,82,99,]),'empty':([2,3,6,7,12,20,34,41,52,53,54,55,61,62,66,78,81,102,103,105,110,117,],[5,8,13,13,13,42,63,13,63,8,63,5,63,63,13,13,5,109,111,13,13,119,]),'procedure':([3,53,],[6,80,]),'repeated_identifier':([4,26,],[9,58,]),'block':([6,7,12,41,66,78,105,110,],[11,24,28,65,88,97,112,113,]),'statement':([6,7,12,41,66,78,105,110,],[12,12,12,12,12,12,12,12,]),'repeated_print':([14,15,59,],[29,37,83,]),'repeated_elem':([14,15,59,],[30,30,30,]),'elem':([14,15,21,22,49,59,67,71,72,73,74,75,76,98,101,],[32,32,48,48,48,32,48,48,48,48,48,48,48,48,48,]),'elem_else':([14,15,21,22,49,59,67,71,72,73,74,75,76,98,101,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'do_while_inicio':([20,],[41,]),'aux_while':([21,],[43,]),'expression':([21,22,49,98,101,],[44,51,77,104,107,]),'expression_s':([21,22,49,67,71,72,73,98,101,],[45,45,45,89,90,91,92,45,45,]),'term':([21,22,49,67,71,72,73,74,75,76,98,101,],[46,46,46,46,46,46,46,93,94,95,46,46,]),'factor':([21,22,49,67,71,72,73,74,75,76,98,101,],[47,47,47,47,47,47,47,47,47,47,47,47,]),'aux_if':([22,],[50,]),'type':([25,],[54,]),'repeated_size':([34,52,54,61,62,],[60,79,81,84,85,]),'op_rel':([45,],[67,]),'aux_do_while':([101,],[106,]),'fin_while':([102,],[108,]),'aux_else':([103,],[110,]),'aux_fin':([117,],[118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM var procedure block END','programa',5,'p_programa','parserules.py',29),
  ('var -> DIM repeated_identifier AS type repeated_size var','var',6,'p_var','parserules.py',35),
  ('var -> DIM repeated_identifier AS STRING_TYPE var','var',5,'p_var','parserules.py',36),
  ('var -> empty','var',1,'p_var','parserules.py',37),
  ('repeated_size -> SIZE repeated_size','repeated_size',2,'p_repeated_size','parserules.py',46),
  ('repeated_size -> SIZE_ID repeated_size','repeated_size',2,'p_repeated_size','parserules.py',47),
  ('repeated_size -> empty','repeated_size',1,'p_repeated_size','parserules.py',48),
  ('repeated_identifier -> IDENTIFIER COMMA repeated_identifier','repeated_identifier',3,'p_repeated_identifier','parserules.py',54),
  ('repeated_identifier -> IDENTIFIER','repeated_identifier',1,'p_repeated_identifier','parserules.py',55),
  ('type -> INT_TYPE','type',1,'p_var_type','parserules.py',71),
  ('type -> FLOAT_TYPE','type',1,'p_var_type','parserules.py',72),
  ('block -> statement block','block',2,'p_block','parserules.py',78),
  ('block -> empty','block',1,'p_block','parserules.py',79),
  ('statement -> INPUT repeated_print','statement',2,'p_statement','parserules.py',85),
  ('statement -> PRINT repeated_print','statement',2,'p_statement','parserules.py',86),
  ('statement -> FOR IDENTIFIER EQUALS INT TO INT block NEXT IDENTIFIER','statement',9,'p_statement','parserules.py',87),
  ('statement -> GOSUB LABEL','statement',2,'p_statement','parserules.py',88),
  ('statement -> GOTO LABEL','statement',2,'p_statement','parserules.py',89),
  ('statement -> LABEL_SALTO','statement',1,'p_statement','parserules.py',90),
  ('statement -> DO do_while_inicio block LOOP WHILE aux_do_while','statement',6,'p_statement_do_while','parserules.py',96),
  ('do_while_inicio -> empty','do_while_inicio',1,'p_do_while_inicio','parserules.py',102),
  ('aux_do_while -> expression','aux_do_while',1,'p_aux_do_while','parserules.py',112),
  ('statement -> WHILE aux_while DO block LOOP fin_while','statement',6,'p_statement_while','parserules.py',126),
  ('aux_while -> expression','aux_while',1,'p_aux_while','parserules.py',132),
  ('fin_while -> empty','fin_while',1,'p_aux_fin_while','parserules.py',147),
  ('statement -> IF aux_if THEN block ELSE aux_else block END IF aux_fin','statement',10,'p_statement_if','parserules.py',163),
  ('aux_if -> expression','aux_if',1,'p_aux_if','parserules.py',169),
  ('aux_else -> empty','aux_else',1,'p_aux_else','parserules.py',180),
  ('aux_fin -> empty','aux_fin',1,'p_aux_if_fin','parserules.py',196),
  ('statement -> LET IDENTIFIER repeated_size EQUALS expression','statement',5,'p_statement_assignment','parserules.py',204),
  ('procedure -> LABEL block RETURN procedure','procedure',4,'p_procedure','parserules.py',215),
  ('procedure -> empty','procedure',1,'p_procedure','parserules.py',216),
  ('repeated_print -> repeated_elem COMMA repeated_print','repeated_print',3,'p_repeated_print','parserules.py',222),
  ('repeated_print -> repeated_elem','repeated_print',1,'p_repeated_print','parserules.py',223),
  ('repeated_elem -> STRING','repeated_elem',1,'p_repeated_elem','parserules.py',229),
  ('repeated_elem -> elem','repeated_elem',1,'p_repeated_elem','parserules.py',230),
  ('expression -> expression_s op_rel expression_s','expression',3,'p_expression','parserules.py',236),
  ('expression -> expression_s','expression',1,'p_expression','parserules.py',237),
  ('expression_s -> term','expression_s',1,'p_expression_s','parserules.py',246),
  ('expression_s -> term PLUS expression_s','expression_s',3,'p_expression_s','parserules.py',247),
  ('expression_s -> term MINUS expression_s','expression_s',3,'p_expression_s','parserules.py',248),
  ('expression_s -> term OR expression_s','expression_s',3,'p_expression_s','parserules.py',249),
  ('term -> factor','term',1,'p_term','parserules.py',258),
  ('term -> factor MULTIPLY term','term',3,'p_term','parserules.py',259),
  ('term -> factor DIVIDE term','term',3,'p_term','parserules.py',260),
  ('term -> factor AND term','term',3,'p_term','parserules.py',261),
  ('factor -> elem','factor',1,'p_factor','parserules.py',270),
  ('factor -> OPENPAR expression CLOSEPAR','factor',3,'p_factor','parserules.py',271),
  ('elem -> INT','elem',1,'p_elem_float','parserules.py',280),
  ('elem -> IDENTIFIER repeated_size','elem',2,'p_elem_float','parserules.py',281),
  ('elem -> elem_else','elem',1,'p_elem_float','parserules.py',282),
  ('elem_else -> FLOAT','elem_else',1,'p_elem','parserules.py',291),
  ('op_rel -> LESSTHAN','op_rel',1,'p_op_rel','parserules.py',297),
  ('op_rel -> GREATERTHAN','op_rel',1,'p_op_rel','parserules.py',298),
  ('op_rel -> ISEQUALTO','op_rel',1,'p_op_rel','parserules.py',299),
  ('empty -> <empty>','empty',0,'p_empty','parserules.py',309),
]
